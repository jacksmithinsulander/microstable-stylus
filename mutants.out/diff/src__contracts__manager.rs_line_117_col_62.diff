--- src/contracts/manager.rs
+++ replace - with / in Manager::withdraw
@@ -109,17 +109,17 @@
             },
             Err(e) => return Err(e) 
         }
     }
 
     pub fn withdraw(&mut self, amount: U256) -> Result<(), Vec<u8>> {
         let sender = self.vm().msg_sender();
         let previous_balance = self.address_2deposit.get(sender);
-        self.address_2minted.insert(sender, previous_balance - amount);
+        self.address_2minted.insert(sender, previous_balance / /* ~ changed by cargo-mutants ~ */ amount);
         match self.collat_ratio(sender) {
             Ok(result) => {
                 if result < U256::from(MIN_COLLAT_RATIO) {
                     return Err(b"Undercollateralized".to_vec());
                 } else {
                     let weth_instance = IErc20::new(self.weth.get());
                     let _ = weth_instance.transfer(self, sender, amount);
                     Ok(())
