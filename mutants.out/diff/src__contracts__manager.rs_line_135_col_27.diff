--- src/contracts/manager.rs
+++ replace > with == in Manager::liquidate
@@ -127,17 +127,17 @@
             },
             Err(e) => return Err(e) 
         }
     }
 
     pub fn liquidate(&mut self, user: Address) -> Result<(), Vec<u8>> {
         match self.collat_ratio(user) {
             Ok(result) => {
-                if result > U256::from(MIN_COLLAT_RATIO) {
+                if result == /* ~ changed by cargo-mutants ~ */ U256::from(MIN_COLLAT_RATIO) {
                     return Err(b"Not Undercollateralized".to_vec());
                 } else {
                     let weth_instance = IErc20::new(self.weth.get());
                     let sh_usd_instance = IErc20::new(self.sh_usd.get());
                     let sender = self.vm().msg_sender();
                     let amount_deposited = self.address_2deposit.get(user);
                     match sh_usd_instance.burn(&mut *self, sender, amount_deposited) {
                         Ok(_) => {
