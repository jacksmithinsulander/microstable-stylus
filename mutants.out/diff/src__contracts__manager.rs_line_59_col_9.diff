--- src/contracts/manager.rs
+++ replace Manager::deposit with ()
@@ -51,29 +51,17 @@
         }
         self.weth.set(weth_address);
         self.oracle.set(oracle_address);
         self.sh_usd.set(sh_usd_address);
         self.is_initialized.set(true);
     }
 
     pub fn deposit(&mut self, amount: U256) {
-        let sender = self.vm().msg_sender();
-        let this = self.vm().contract_address();
-
-        unsafe { 
-            let _ = &RawCall::new().call(self.weth.get(), &transferFromCall {
-                from: sender,
-                to: this,
-                value: amount,
-            }.abi_encode());
-        };
-
-        let previus_balance = self.address_2deposit.get(sender);
-        self.address_2deposit.insert(sender, previus_balance + amount);
+        () /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn burn(&mut self, amount: U256) -> Result<(), Vec<u8>> {
         let sender = self.vm().msg_sender();
         let previous_balance = self.address_2minted.get(sender);
         self.address_2minted.insert(sender, previous_balance - amount);
         let sh_usd_instance = IErc20::new(self.sh_usd.get());
         match sh_usd_instance.burn(self, sender, amount) {
