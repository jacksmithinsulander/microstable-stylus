--- src/contracts/manager.rs
+++ replace + with * in Manager::mint
@@ -81,17 +81,17 @@
             Err(e) => Err(e.into()),
         }
 
     }
 
     pub fn mint(&mut self, amount: U256) -> Result<(), Vec<u8>> {
         let sender = self.vm().msg_sender();
         let previous_balance = self.address_2minted.get(sender);
-        self.address_2minted.insert(sender, previous_balance + amount);
+        self.address_2minted.insert(sender, previous_balance * /* ~ changed by cargo-mutants ~ */ amount);
         match self.collat_ratio(sender) {
             Ok(result) => {
                 Ok(())
                 //if result < U256::from(MIN_COLLAT_RATIO) {
                     //return Err(b"Undercollateralized".to_vec());
                 //} else {
                     //let sh_usd_instance = IErc20::new(self.sh_usd.get());
                     //match sh_usd_instance.mint(self ,sender, amount) {
